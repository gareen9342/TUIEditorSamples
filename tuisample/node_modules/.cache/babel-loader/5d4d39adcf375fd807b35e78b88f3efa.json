{"ast":null,"code":"var _jsxFileName = \"/Users/garin/Documents/TUIEditorSamples/tuisample/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from \"react\";\nimport \"@toast-ui/editor/dist/toastui-editor.css\";\nimport { Editor } from \"@toast-ui/react-editor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const editorRef = useRef();\n  const [text, setText] = useState(\"\");\n  useEffect(() => {\n    if (editorRef.current) {\n      editorRef.current.getInstance().removeHook(\"addImageBlobHook\");\n      editorRef.current.getInstance().addHook(\"addImageBlobHook\", (blob, callback) => {\n        (async () => {\n          let formData = new FormData();\n          formData.append(\"file\", blob);\n          axios.defaults.withCredentials = true;\n          const {\n            data: url\n          } = await axios.post(`${backUrl}image.do`, formData, {\n            header: {\n              \"content-type\": \"multipart/formdata\"\n            }\n          });\n          callback(url, \"alt text\");\n        })();\n\n        return false;\n      });\n    }\n\n    return () => {};\n  }, [editorRef]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Editor, {\n      initialValue: \"\\uC2A4\\uD130\\uB514\\uC5D0 \\uB300\\uD55C \\uC815\\uBCF4\\uB97C \\uAC04\\uB7B5\\uD788 \\uC791\\uC131\\uD574\\uC8FC\\uC138\\uC694 '-'\",\n      previewStyle: \"tab\",\n      height: \"600px\",\n      initialEditType: \"wysiwyg\",\n      useCommandShortcut: true,\n      onChange: () => {},\n      ref: editorRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"5DuWfOLtFMgfwScEZWQTwNfypsg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/garin/Documents/TUIEditorSamples/tuisample/src/App.js"],"names":["React","useRef","useState","useEffect","Editor","App","editorRef","text","setText","current","getInstance","removeHook","addHook","blob","callback","formData","FormData","append","axios","defaults","withCredentials","data","url","post","backUrl","header"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAO,0CAAP;AACA,SAASC,MAAT,QAAuB,wBAAvB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAMC,SAAS,GAAGL,MAAM,EAAxB;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIG,SAAS,CAACG,OAAd,EAAuB;AACnBH,MAAAA,SAAS,CAACG,OAAV,CAAkBC,WAAlB,GAAgCC,UAAhC,CAA2C,kBAA3C;AACAL,MAAAA,SAAS,CAACG,OAAV,CACKC,WADL,GAEKE,OAFL,CAEa,kBAFb,EAEiC,CAACC,IAAD,EAAOC,QAAP,KAAoB;AAC7C,SAAC,YAAY;AACT,cAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,UAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBJ,IAAxB;AAEAK,UAAAA,KAAK,CAACC,QAAN,CAAeC,eAAf,GAAiC,IAAjC;AACA,gBAAM;AAAEC,YAAAA,IAAI,EAAEC;AAAR,cAAgB,MAAMJ,KAAK,CAACK,IAAN,CACvB,GAAEC,OAAQ,UADa,EAExBT,QAFwB,EAGxB;AACIU,YAAAA,MAAM,EAAE;AAAE,8BAAgB;AAAlB;AADZ,WAHwB,CAA5B;AAOAX,UAAAA,QAAQ,CAACQ,GAAD,EAAM,UAAN,CAAR;AACH,SAbD;;AAeA,eAAO,KAAP;AACH,OAnBL;AAoBH;;AAED,WAAO,MAAM,CAAE,CAAf;AACH,GA1BQ,EA0BN,CAAChB,SAAD,CA1BM,CAAT;AA2BA,sBACI;AAAA,2BACI,QAAC,MAAD;AACI,MAAA,YAAY,EAAC,sHADjB;AAEI,MAAA,YAAY,EAAC,KAFjB;AAGI,MAAA,MAAM,EAAC,OAHX;AAII,MAAA,eAAe,EAAC,SAJpB;AAKI,MAAA,kBAAkB,EAAE,IALxB;AAMI,MAAA,QAAQ,EAAE,MAAM,CACf,CAPL;AAQI,MAAA,GAAG,EAAEA;AART;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GA7CQD,G;;KAAAA,G;AA+CT,eAAeA,GAAf","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\"\nimport \"@toast-ui/editor/dist/toastui-editor.css\"\nimport { Editor } from \"@toast-ui/react-editor\"\n\nfunction App() {\n    const editorRef = useRef()\n    const [text, setText] = useState(\"\")\n\n    useEffect(() => {\n        if (editorRef.current) {\n            editorRef.current.getInstance().removeHook(\"addImageBlobHook\");\n            editorRef.current\n                .getInstance()\n                .addHook(\"addImageBlobHook\", (blob, callback) => {\n                    (async () => {\n                        let formData = new FormData();\n                        formData.append(\"file\", blob);\n\n                        axios.defaults.withCredentials = true;\n                        const { data: url } = await axios.post(\n                            `${backUrl}image.do`,\n                            formData,\n                            {\n                                header: { \"content-type\": \"multipart/formdata\" },\n                            }\n                        );\n                        callback(url, \"alt text\");\n                    })();\n\n                    return false;\n                });\n        }\n\n        return () => {};\n    }, [editorRef]);\n    return (\n        <div>\n            <Editor\n                initialValue=\"스터디에 대한 정보를 간략히 작성해주세요 '-'\"\n                previewStyle=\"tab\"\n                height=\"600px\"\n                initialEditType=\"wysiwyg\"\n                useCommandShortcut={true}\n                onChange={() => {\n                }}\n                ref={editorRef}\n            />\n        </div>\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}